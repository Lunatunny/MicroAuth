node {
    stage ("Checkout AuthApi"){
        git branch: 'main', url: 'https://github.com/Lunatunny/MicroAuth.git'
    }

    stage ("Gradle Build - AuthApi") {
        sh 'gradle clean build -b ./MicroAuth/build.gradle'
    }
    
    stage ("Gradle Bootjar-Package - AuthApi") {
        sh 'gradle bootjar -b ./MicroAuth/build.gradle'
    }
    
    stage ("Containerize the app-docker build - AuthApi") {
        sh 'docker build --rm -t jenkins-auth:v1.0 MicroAuth/.'
    }
    
    stage ("Inspect the docker image - AuthApi"){
        sh "docker images jenkins-auth:v1.0"
        sh "docker inspect jenkins-auth:v1.0"
    }
    
    stage ("Run Docker container instance - AuthApi"){
        sh "docker stop jenkins-auth || true"
	sh "docker run -d --rm --name jenkins-auth -p 8081:8081 jenkins-auth:v1.0"
    }
    
    stage('User Acceptance Test - AuthApi') {
	
	  def response= input message: 'Is this build good to go?',
	   parameters: [choice(choices: 'Yes\nNo', 
	   description: '', name: 'Pass')]
	
	  if(response=="Yes") {
	      stage("Get DATA Kubernetes IP") {

            
                
                def userInput = input(
                 id: 'userInput', message: 'Enter the Kubernetes IP of the DATA SERVICE', 
                 parameters: [
                 [$class: 'TextParameterDefinition', defaultValue: '0.0.0.0:0000', description: 'IP of DATA SERVICE in Kubernetes', name: 'API_HOST']
                ])
                echo ("Dataservice IP: "+userInput['API_HOST'])

                
            
             }
		stage('Deploy to Kubenetes cluster - AuthApi') {
	      sh "kubectl create deployment jenkins-auth --image=jenkins-auth:v1.0"
		//get the value of API_HOST from kubernetes services and set the env variable
	      sh "kubectl set env deployment/jenkins-auth API_HOST="+userInput['API_HOST']
	      sh "kubectl expose deployment jenkins-auth --type=LoadBalancer --port=8081"
	    }
	  }
    }

    stage("Production Deployment View"){
        sh "kubectl get deployments"
        sh "kubectl get pods"
        sh "kubectl get services"
    }
}
